[{"C:\\Users\\Jimmy\\Documents\\GitHub\\SuperHeroBlog\\frontend\\src\\index.js":"1","C:\\Users\\Jimmy\\Documents\\GitHub\\SuperHeroBlog\\frontend\\src\\About.js":"2","C:\\Users\\Jimmy\\Documents\\GitHub\\SuperHeroBlog\\frontend\\src\\Home.js":"3","C:\\Users\\Jimmy\\Documents\\GitHub\\SuperHeroBlog\\frontend\\src\\HeroInfo.js":"4","C:\\Users\\Jimmy\\Documents\\GitHub\\SuperHeroBlog\\frontend\\src\\PageNotFound.js":"5","C:\\Users\\Jimmy\\Documents\\GitHub\\SuperHeroBlog\\frontend\\src\\Navbar.js":"6","C:\\Users\\Jimmy\\Documents\\GitHub\\SuperHeroBlog\\frontend\\src\\App.js":"7","C:\\Users\\Jimmy\\Documents\\GitHub\\SuperHeroBlog\\frontend\\src\\context.js":"8"},{"size":227,"mtime":1609665086945,"results":"9","hashOfConfig":"10"},{"size":3779,"mtime":1609707755010,"results":"11","hashOfConfig":"10"},{"size":107,"mtime":1609606220878,"results":"12","hashOfConfig":"10"},{"size":3263,"mtime":1609782994225,"results":"13","hashOfConfig":"10"},{"size":525,"mtime":1609662610850,"results":"14","hashOfConfig":"10"},{"size":601,"mtime":1609782355341,"results":"15","hashOfConfig":"10"},{"size":789,"mtime":1609665039613,"results":"16","hashOfConfig":"10"},{"size":332,"mtime":1609665119322,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ua8ci3",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"C:\\Users\\Jimmy\\Documents\\GitHub\\SuperHeroBlog\\frontend\\src\\index.js",[],["37","38"],"C:\\Users\\Jimmy\\Documents\\GitHub\\SuperHeroBlog\\frontend\\src\\About.js",["39"],"import React, { useState } from \"react\";\r\nimport \"./About.css\";\r\nimport profilePicture from \"./profilepicture.jpg\";\r\nimport { useGlobalContext } from \"./context\";\r\nimport { HiLocationMarker } from \"react-icons/hi\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst myName = \"Halil Focic\";\r\nconst myArray = myName.split(\"\");\r\n\r\nconst About = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let emailData = {\r\n      email,\r\n      subject,\r\n      text,\r\n    };\r\n    console.log(emailData);\r\n    let axiosConfig = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    };\r\n    axios.post(\"/email\", emailData, axiosConfig);\r\n  };\r\n  return (\r\n    <div className=\"about-container\">\r\n      <div className=\"profile\">\r\n        <img src={profilePicture} alt=\"Profile\" className=\"profile-pic\" />\r\n        <div className=\"my-name\">\r\n          {myArray.map((slovo, index) => {\r\n            return (\r\n              <span className={`${slovo ? \"char-name\" : \"\"}`} key={index}>\r\n                {slovo}\r\n              </span>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"my-info\">20</div>\r\n        <div className=\"my-info\">Student</div>\r\n        <div className=\"my-info\">\r\n          <HiLocationMarker />\r\n          Mostar\r\n        </div>\r\n      </div>\r\n      <div className=\"about\">\r\n        <div className=\"about-me\">\r\n          <h1 style={{ marginBottom: \"2rem\", color: \"royalblue\" }}>About me</h1>\r\n          <p>\r\n            I am second year software engineering student. My interests are web\r\n            development technologies like React and NodeJS. Looking for\r\n            collaboration/internship/mentor\r\n          </p>\r\n        </div>\r\n        <div className=\"about-project\">\r\n          <h1\r\n            style={{\r\n              marginBottom: \"2rem\",\r\n              marginTop: \"5rem\",\r\n              color: \"royalblue\",\r\n            }}\r\n          >\r\n            About project\r\n          </h1>\r\n          <p>\r\n            Blog site project was built using\r\n            MERN(MongoDB,Express,React,NodeJS). It has 3 main\r\n            pages,Home,About,Hero Info. On home page you are able to view or\r\n            create posts. Hero info page will give you main info about superhero\r\n            you type in. Since you are reading about page you already know what\r\n            this page is all about :)\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"contact-me\">\r\n        <form className=\"contact-me-form\">\r\n          <label htmlFor=\"email\" className=\"frm-lbl\">\r\n            Email\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"frm-input\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <label htmlFor=\"subject\" className=\"frm-lbl\">\r\n            Subject\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"frm-input\"\r\n            value={subject}\r\n            onChange={(e) => setSubject(e.target.value)}\r\n          />\r\n          <label htmlFor=\"emailText\" className=\"frm-lbl\">\r\n            Enter your message\r\n          </label>\r\n          <textarea\r\n            width=\"50px\"\r\n            className=\"frm-input frm-textarea\"\r\n            style={{ resize: \"none\" }}\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n          ></textarea>\r\n          <button type=\"submit\" className=\"btn-submit\" onClick={handleSubmit}>\r\n            Send Email\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default About;\r\n","C:\\Users\\Jimmy\\Documents\\GitHub\\SuperHeroBlog\\frontend\\src\\Home.js",[],"C:\\Users\\Jimmy\\Documents\\GitHub\\SuperHeroBlog\\frontend\\src\\HeroInfo.js",["40","41"],"C:\\Users\\Jimmy\\Documents\\GitHub\\SuperHeroBlog\\frontend\\src\\PageNotFound.js",[],"C:\\Users\\Jimmy\\Documents\\GitHub\\SuperHeroBlog\\frontend\\src\\Navbar.js",[],"C:\\Users\\Jimmy\\Documents\\GitHub\\SuperHeroBlog\\frontend\\src\\App.js",[],"C:\\Users\\Jimmy\\Documents\\GitHub\\SuperHeroBlog\\frontend\\src\\context.js",["42"],"import React, { useState, useContext } from \"react\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  return (\r\n    <AppContext.Provider value={\"hello test\"}>{children}</AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":4,"column":10,"nodeType":"49","messageId":"50","endLine":4,"endColumn":26},{"ruleId":"47","severity":1,"message":"51","line":6,"column":17,"nodeType":"49","messageId":"50","endLine":6,"endColumn":25},{"ruleId":"52","severity":1,"message":"53","line":41,"column":13,"nodeType":"54","endLine":41,"endColumn":68},{"ruleId":"47","severity":1,"message":"55","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":25},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'useGlobalContext' is defined but never used.","Identifier","unusedVar","'setError' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]